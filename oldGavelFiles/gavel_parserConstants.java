/* Generated By:JavaCC: Do not edit this line. gavel_parserConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface gavel_parserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 5;
  /** RegularExpression Id. */
  int EXTENDS = 6;
  /** RegularExpression Id. */
  int PUBLIC = 7;
  /** RegularExpression Id. */
  int RETURN = 8;
  /** RegularExpression Id. */
  int VOID = 9;
  /** RegularExpression Id. */
  int IF = 10;
  /** RegularExpression Id. */
  int ELSEIF = 11;
  /** RegularExpression Id. */
  int ELSE = 12;
  /** RegularExpression Id. */
  int WHILE = 13;
  /** RegularExpression Id. */
  int BREAK = 14;
  /** RegularExpression Id. */
  int LABELED = 15;
  /** RegularExpression Id. */
  int FOREACH = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int SWITCH = 18;
  /** RegularExpression Id. */
  int CASE = 19;
  /** RegularExpression Id. */
  int DEFAULT_ = 20;
  /** RegularExpression Id. */
  int NEW = 21;
  /** RegularExpression Id. */
  int NULL = 22;
  /** RegularExpression Id. */
  int TRUE = 23;
  /** RegularExpression Id. */
  int FALSE = 24;
  /** RegularExpression Id. */
  int SUPER = 25;
  /** RegularExpression Id. */
  int INSTANCEOF = 26;
  /** RegularExpression Id. */
  int ABSTRACT = 27;
  /** RegularExpression Id. */
  int ASSERT = 28;
  /** RegularExpression Id. */
  int BYTE = 29;
  /** RegularExpression Id. */
  int CATCH = 30;
  /** RegularExpression Id. */
  int CHAR = 31;
  /** RegularExpression Id. */
  int CONST = 32;
  /** RegularExpression Id. */
  int CONTINUE = 33;
  /** RegularExpression Id. */
  int DOUBLE = 34;
  /** RegularExpression Id. */
  int DO = 35;
  /** RegularExpression Id. */
  int ENUM = 36;
  /** RegularExpression Id. */
  int FINAL = 37;
  /** RegularExpression Id. */
  int FINALLY = 38;
  /** RegularExpression Id. */
  int FLOAT = 39;
  /** RegularExpression Id. */
  int GOTO = 40;
  /** RegularExpression Id. */
  int IMPLEMENTS = 41;
  /** RegularExpression Id. */
  int IMPORT = 42;
  /** RegularExpression Id. */
  int INTERFACE = 43;
  /** RegularExpression Id. */
  int LONG = 44;
  /** RegularExpression Id. */
  int NATIVE = 45;
  /** RegularExpression Id. */
  int PACKAGE = 46;
  /** RegularExpression Id. */
  int PRIVATE = 47;
  /** RegularExpression Id. */
  int PROTECTED = 48;
  /** RegularExpression Id. */
  int SHORT = 49;
  /** RegularExpression Id. */
  int STATIC = 50;
  /** RegularExpression Id. */
  int STRICTFP = 51;
  /** RegularExpression Id. */
  int SYNCHRONIZED = 52;
  /** RegularExpression Id. */
  int THROW = 53;
  /** RegularExpression Id. */
  int THROWS = 54;
  /** RegularExpression Id. */
  int TRANSIENT = 55;
  /** RegularExpression Id. */
  int TRY = 56;
  /** RegularExpression Id. */
  int VOLATILE = 57;
  /** RegularExpression Id. */
  int COMMENT = 58;
  /** RegularExpression Id. */
  int IDENTIFIER = 59;
  /** RegularExpression Id. */
  int INTEGER = 60;
  /** RegularExpression Id. */
  int CHARACTER = 61;
  /** RegularExpression Id. */
  int STRING = 62;
  /** RegularExpression Id. */
  int COMMA = 63;
  /** RegularExpression Id. */
  int LPAREN = 64;
  /** RegularExpression Id. */
  int RPAREN = 65;
  /** RegularExpression Id. */
  int LBRACKET = 66;
  /** RegularExpression Id. */
  int RBRACKET = 67;
  /** RegularExpression Id. */
  int LBRACE = 68;
  /** RegularExpression Id. */
  int RBRACE = 69;
  /** RegularExpression Id. */
  int COLON = 70;
  /** RegularExpression Id. */
  int PLUS_EQUALS = 71;
  /** RegularExpression Id. */
  int MINUS_EQUALS = 72;
  /** RegularExpression Id. */
  int STAR_EQUALS = 73;
  /** RegularExpression Id. */
  int FORWARD_SLASH_EQUALS = 74;
  /** RegularExpression Id. */
  int PERCENT_EQUALS = 75;
  /** RegularExpression Id. */
  int ASSIGNMENT = 76;
  /** RegularExpression Id. */
  int INCREMENT = 77;
  /** RegularExpression Id. */
  int DECREMENT = 78;
  /** RegularExpression Id. */
  int OR = 79;
  /** RegularExpression Id. */
  int AND = 80;
  /** RegularExpression Id. */
  int NOT_EQUALS = 81;
  /** RegularExpression Id. */
  int EQUALS = 82;
  /** RegularExpression Id. */
  int LE = 83;
  /** RegularExpression Id. */
  int GE = 84;
  /** RegularExpression Id. */
  int LT = 85;
  /** RegularExpression Id. */
  int GT = 86;
  /** RegularExpression Id. */
  int PLUS = 87;
  /** RegularExpression Id. */
  int MINUS = 88;
  /** RegularExpression Id. */
  int EXPONENT = 89;
  /** RegularExpression Id. */
  int STAR = 90;
  /** RegularExpression Id. */
  int FORWARD_SLASH = 91;
  /** RegularExpression Id. */
  int PERCENT = 92;
  /** RegularExpression Id. */
  int BOOL_NEG = 93;
  /** RegularExpression Id. */
  int DOT = 94;
  /** RegularExpression Id. */
  int QUESTIONMARK = 95;
  /** RegularExpression Id. */
  int SEMICOLON = 96;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"class\"",
    "\"extends\"",
    "\"public\"",
    "\"return\"",
    "\"void\"",
    "\"if\"",
    "\"else if\"",
    "\"else\"",
    "\"while\"",
    "\"break\"",
    "\"labeled\"",
    "\"foreach\"",
    "\"for\"",
    "\"switch\"",
    "\"case\"",
    "\"default\"",
    "\"new\"",
    "\"null\"",
    "\"true\"",
    "\"false\"",
    "\"super\"",
    "\"instanceof\"",
    "\"abstract\"",
    "\"assert\"",
    "\"byte\"",
    "\"catch\"",
    "\"char\"",
    "\"const\"",
    "\"continue\"",
    "\"double\"",
    "\"do\"",
    "\"enum\"",
    "\"final\"",
    "\"finally\"",
    "\"float\"",
    "\"goto\"",
    "\"implements\"",
    "\"import\"",
    "\"interface\"",
    "\"long\"",
    "\"native\"",
    "\"package\"",
    "\"private\"",
    "\"protected\"",
    "\"short\"",
    "\"static\"",
    "\"strictfp\"",
    "\"synchronized\"",
    "\"throw\"",
    "\"throws\"",
    "\"transient\"",
    "\"try\"",
    "\"volatile\"",
    "<COMMENT>",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<CHARACTER>",
    "<STRING>",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\"+=\"",
    "\"-=\"",
    "\"*=\"",
    "\"/=\"",
    "\"%=\"",
    "\"=\"",
    "\"++\"",
    "\"--\"",
    "\"||\"",
    "\"&&\"",
    "\"!=\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"**\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"!\"",
    "\".\"",
    "\"?\"",
    "\";\"",
  };

}
