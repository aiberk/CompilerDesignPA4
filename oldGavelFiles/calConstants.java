/* Generated By:JavaCC: Do not edit this line. calConstants.java */

/** 
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface calConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CLASS = 5;
  /** RegularExpression Id. */
  int EXTENDS = 6;
  /** RegularExpression Id. */
  int PUBLIC = 7;
  /** RegularExpression Id. */
  int RETURN = 8;
  /** RegularExpression Id. */
  int BOOLEAN = 9;
  /** RegularExpression Id. */
  int INT = 10;
  /** RegularExpression Id. */
  int VOID = 11;
  /** RegularExpression Id. */
  int IF = 12;
  /** RegularExpression Id. */
  int ELSE = 13;
  /** RegularExpression Id. */
  int WHILE = 14;
  /** RegularExpression Id. */
  int BREAK = 15;
  /** RegularExpression Id. */
  int LABELED = 16;
  /** RegularExpression Id. */
  int FOR = 17;
  /** RegularExpression Id. */
  int SWITCH = 18;
  /** RegularExpression Id. */
  int CASE = 19;
  /** RegularExpression Id. */
  int DEFAULT_ = 20;
  /** RegularExpression Id. */
  int NEW = 21;
  /** RegularExpression Id. */
  int NULL = 22;
  /** RegularExpression Id. */
  int TRUE = 23;
  /** RegularExpression Id. */
  int FALSE = 24;
  /** RegularExpression Id. */
  int THIS = 25;
  /** RegularExpression Id. */
  int SUPER = 26;
  /** RegularExpression Id. */
  int INSTANCEOF = 27;
  /** RegularExpression Id. */
  int ABSTRACT = 28;
  /** RegularExpression Id. */
  int ASSERT = 29;
  /** RegularExpression Id. */
  int BYTE = 30;
  /** RegularExpression Id. */
  int CATCH = 31;
  /** RegularExpression Id. */
  int CHAR = 32;
  /** RegularExpression Id. */
  int CONST = 33;
  /** RegularExpression Id. */
  int CONTINUE = 34;
  /** RegularExpression Id. */
  int DOUBLE = 35;
  /** RegularExpression Id. */
  int DO = 36;
  /** RegularExpression Id. */
  int ENUM = 37;
  /** RegularExpression Id. */
  int FINAL = 38;
  /** RegularExpression Id. */
  int FINALLY = 39;
  /** RegularExpression Id. */
  int FLOAT = 40;
  /** RegularExpression Id. */
  int GOTO = 41;
  /** RegularExpression Id. */
  int IMPLEMENTS = 42;
  /** RegularExpression Id. */
  int IMPORT = 43;
  /** RegularExpression Id. */
  int INTERFACE = 44;
  /** RegularExpression Id. */
  int LONG = 45;
  /** RegularExpression Id. */
  int NATIVE = 46;
  /** RegularExpression Id. */
  int PACKAGE = 47;
  /** RegularExpression Id. */
  int PRIVATE = 48;
  /** RegularExpression Id. */
  int PROTECTED = 49;
  /** RegularExpression Id. */
  int SHORT = 50;
  /** RegularExpression Id. */
  int STATIC = 51;
  /** RegularExpression Id. */
  int STRICTFP = 52;
  /** RegularExpression Id. */
  int SYNCHRONIZED = 53;
  /** RegularExpression Id. */
  int THROW = 54;
  /** RegularExpression Id. */
  int THROWS = 55;
  /** RegularExpression Id. */
  int TRANSIENT = 56;
  /** RegularExpression Id. */
  int TRY = 57;
  /** RegularExpression Id. */
  int VOLATILE = 58;
  /** RegularExpression Id. */
  int COMMENT = 59;
  /** RegularExpression Id. */
  int LETTER = 60;
  /** RegularExpression Id. */
  int DIGIT = 61;
  /** RegularExpression Id. */
  int UNDERSCORE = 62;
  /** RegularExpression Id. */
  int IDENTIFIER = 63;
  /** RegularExpression Id. */
  int INTEGER = 64;
  /** RegularExpression Id. */
  int CHARACTER = 65;
  /** RegularExpression Id. */
  int STRING = 66;
  /** RegularExpression Id. */
  int COMMA = 67;
  /** RegularExpression Id. */
  int LPAREN = 68;
  /** RegularExpression Id. */
  int RPAREN = 69;
  /** RegularExpression Id. */
  int LBRACKET = 70;
  /** RegularExpression Id. */
  int RBRACKET = 71;
  /** RegularExpression Id. */
  int LBRACE = 72;
  /** RegularExpression Id. */
  int RBRACE = 73;
  /** RegularExpression Id. */
  int COLON = 74;
  /** RegularExpression Id. */
  int ASSIGNMENT = 75;
  /** RegularExpression Id. */
  int INCREMENT = 76;
  /** RegularExpression Id. */
  int DECREMENT = 77;
  /** RegularExpression Id. */
  int OR = 78;
  /** RegularExpression Id. */
  int AND = 79;
  /** RegularExpression Id. */
  int NOT_EQUALS = 80;
  /** RegularExpression Id. */
  int EQUALS = 81;
  /** RegularExpression Id. */
  int LE = 82;
  /** RegularExpression Id. */
  int GE = 83;
  /** RegularExpression Id. */
  int LT = 84;
  /** RegularExpression Id. */
  int GT = 85;
  /** RegularExpression Id. */
  int PLUS = 86;
  /** RegularExpression Id. */
  int MINUS = 87;
  /** RegularExpression Id. */
  int TIMES = 88;
  /** RegularExpression Id. */
  int DIVISION = 89;
  /** RegularExpression Id. */
  int REMAINDER = 90;
  /** RegularExpression Id. */
  int BOOL_NEG = 91;
  /** RegularExpression Id. */
  int DOT = 92;
  /** RegularExpression Id. */
  int SEMICOLON = 93;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"\\t\"",
    "\"\\n\"",
    "\"\\r\"",
    "\" \"",
    "\"class\"",
    "\"extends\"",
    "\"public\"",
    "\"return\"",
    "\"boolean\"",
    "\"int\"",
    "\"void\"",
    "\"if\"",
    "\"else\"",
    "\"while\"",
    "\"break\"",
    "\"labeled\"",
    "\"for\"",
    "\"switch\"",
    "\"case\"",
    "\"default\"",
    "\"new\"",
    "\"null\"",
    "\"true\"",
    "\"false\"",
    "\"this\"",
    "\"super\"",
    "\"instanceof\"",
    "\"abstract\"",
    "\"assert\"",
    "\"byte\"",
    "\"catch\"",
    "\"char\"",
    "\"const\"",
    "\"continue\"",
    "\"double\"",
    "\"do\"",
    "\"enum\"",
    "\"final\"",
    "\"finally\"",
    "\"float\"",
    "\"goto\"",
    "\"implements\"",
    "\"import\"",
    "\"interface\"",
    "\"long\"",
    "\"native\"",
    "\"package\"",
    "\"private\"",
    "\"protected\"",
    "\"short\"",
    "\"static\"",
    "\"strictfp\"",
    "\"synchronized\"",
    "\"throw\"",
    "\"throws\"",
    "\"transient\"",
    "\"try\"",
    "\"volatile\"",
    "<COMMENT>",
    "<LETTER>",
    "<DIGIT>",
    "\"_\"",
    "<IDENTIFIER>",
    "<INTEGER>",
    "<CHARACTER>",
    "<STRING>",
    "\",\"",
    "\"(\"",
    "\")\"",
    "\"[\"",
    "\"]\"",
    "\"{\"",
    "\"}\"",
    "\":\"",
    "\"=\"",
    "\"++\"",
    "\"--\"",
    "\"||\"",
    "\"&&\"",
    "\"!=\"",
    "\"==\"",
    "\"<=\"",
    "\">=\"",
    "\"<\"",
    "\">\"",
    "\"+\"",
    "\"-\"",
    "\"*\"",
    "\"/\"",
    "\"%\"",
    "\"!\"",
    "\".\"",
    "\";\"",
  };

}
